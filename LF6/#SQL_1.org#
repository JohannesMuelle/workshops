# -*- eval: (save-excursion (org-babel-goto-named-src-block "workshopPreamble") (org-babel-execute-src-block)) -*-
#+TITLE:     Einführung in Python
#+AUTHOR:    Jörg Reuter
#+EMAIL:     joerg@reuter.sc
#+DATE:      

#+PROPERTY: exports both
#+EXCLUDE_TAGS: noexport mitsetup
#+SETUPFILE: ../workshopPreamble.org

#+name: workshopPreamble
#+begin_src emacs-lisp :exports none :results silent :tangle no
  (load-file "../setupEnvironment.el")
#+end_src

#+name: setupR
#+begin_src R :exports none :tangle no :results silent
  rm(list=ls())
  .First <- function() {
    options(width=70)
    options(useFancyQuotes=FALSE)
    options(show.signif.stars=FALSE)
    options(scipen = 10)
    options(digits = 3)
  }
#+end_src

* Installlation von Gate One

#+BEGIN_SRC BASH
docker run -t --name=gateone -p 443:8000 liftoff/gateone
#+END_SRC

* Einführung
Daten werden in Datenbanken abgelegt. Jede Datenbank besteht aus Tabellen. Jede Tabelle besteht aus Feldern.
Ein Beispiel einer Tabelle innerhalb einer Datenbank:
| verkaeufer | hersteller | typ-nummer | bezeichnung-jahr | qtj-2016-08 | qtj-2016-09 |
|------------+------------+------------+------------------+-------------+-------------|
|            |            |            |                  |             |             |

Eine Zeile in einer Tabelle wird als Eintrag oder "Record" bezeichnet. Im Statistischen Umfeld werden die Zeilen als Fall und die Spalten als Variable bezeichnet.
Es gibt eine Vielzahl öffentlicher Datenbanken, die verschiedene Daten zur Verfügung stellen. Es gibt auch sogenannte Sample- Datenbanken die zum erlernen von SQL erschaffen wurden und sogenannte Stress-Datenbanken die zum Testen von Datenbankservern entworfen wurden. Eine der bekanntesten Datenbanken zum erlernen von SQL ist Sakila (https://dev.mysql.com/doc/sakila/en/).
Die Struktur der Datenbank ist hier zu finden: https://dev.mysql.com/doc/employee/en/sakila-structure.html

** Installation eiunes SQL-Servers
Maria-DB als Docker
In den Ordner $(pwd)/init-db kommt der Dumb der Datenbank:


https://hub.docker.com/_/mariadb/
Befehl: 

#+BEGIN_SRC BASH
docker run -v $(pwd)/init-db:/docker-entrypoint-initdb.d -e MYSQL_ROOT_PASSWORD=fbs -e MYSQL_DATABASE=sakila -e MYSQL_PASSWORD=fbs mariadb
#+END_SRC

Einspielen der Daten:
https://dev.mysql.com/doc/employee/en/employees-installation.html

#+BEGIN_SRC BASH
git clone https://github.com/datacharmer/test_db
mkdir init-db
cp test_db/employees.sql init-db/
#+END_SRC

Externer Zugriff:
https://mariadb.com/kb/en/mariadb/configuring-mariadb-for-remote-client-access/

PhpMyAdmin:
https://hub.docker.com/r/phpmyadmin/phpmyadmin/
Hier besonders: 
docker run --name myadmin -d -p 8080:80 -e PMA_ARBITRARY=1 phpmyadmin/phpmyadmin


* Dr. Codds 12 Regeln
We owe to Dr. Edgar F. Codd the concept of the relational model, from his 1970
paper A Relational Model of Data for Large Shared Data Banks ( http://www.acm.
org/classics/nov95/toc.html ). Dr. Codd later explained his model by defining
a set of rules – the so-called Codd's Twelve rules ( http://en.wikipedia.org/
wiki/Codd%27s_12_rules ). An ideal database management system (DBMS) would
implement all those rules, but few if any do.

* Beispiel
Wir erstellen die Datenbank für ein Computergeschäft. Das Geschäft heißt "Fredy Braun Software" oder Abgekürzt FBS. Wir fangen an mit dem erfassen der Verkauften Hardware.

Wir bekommen folgende Tabelle zur Verfügung gestellt:
| Verkäufer     | Zeitraum       | Hersteller | Typ-Nummer | Bezeichnung und Jahr | Anzahl |
|---------------+----------------+------------+------------+----------------------+--------|
| Müller, Erwin | August 2016    | DELL       |            |                      |      3 |
| Müller, Erwin | August 2016    | IBM        |            |                      |      7 |
| Müller, Erwin | September 2016 | HP         |            |                      |      4 |
| Baier, Klaus  | August 2016    | HP         |            |                      |      1 |
| Baier, Klaus  | August 2016    | DELL       |            |                      |      1 |
| Baier, Klaus  | September 2016 | SGI        |            |                      |      6 |

Die Tabelle müssen wir zur Verwendung in einer Datenbank etwas umformatieren:
| verkaeufer | hersteller | typ_nummer | bezeichnung_jahr | qtj_2016_08 | qtj_2016_09 |
|------------+------------+------------+------------------+-------------+-------------|
|            |            |            |                  |             |             |


Um die Tabelle anlegen zu können müssen wir zerst eine Datenbank anlegen. Dies können wir entweder über die Weboberfläche phpMyAdmin machen oder aber über die Kommandozeile mit dem Befehl mysql -u root -pfbs. 

Der Befehl dazu lautet:
#+BEGIN_SRC SQL
create database fbs;
#+END_SRC

Dann müssen wir die Datenbank zur Benutzung auswählen. Dies geschieht mit:
#+BEGIN_SRC SQL
use fbs;
#+END_SRC

und das Anlegen der Tabelle dann mit dem Befehl:
#+BEGIN_SRC SQL
CREATE TABLE verkauf (
verkaeufer char(40) NOT NULL,
hersteller char(40) NOT NULL,
typ_nummer char(40) NOT NULL,
bezeichnung_jahr char(40) NOT NULL,
qtj_2016_08 int(11) NOT NULL,
qtj_2016_09 int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
#+END_SRC
geht auch utf statt latin1?

Nachdem wir die Tabelle angelegt haben, tragen wir  die Werte von der Tabelle oben ein:
#+BEGIN_SRC SQL
INSERT INTO sales VALUES ('Müller, Erwin', 'DELL', '1A8','Mitsou 2007', 3 |
#+END_SRC

| Müller, Erwin | August 2016    | IBM        |            |                      |      7 |
| Müller, Erwin | September 2016 | HP         |            |                      |      4 |
| Baier, Klaus  | August 2016    | HP         |            |                      |      1 |
| Baier, Klaus  | August 2016    | DELL       |            |                      |      1 |
| Baier, Klaus  | September 2016 | SGI        |            |                      |      6 |

Die Tabelle müssen wir zur Verwendung in einer Datenbank etwas umformatieren:
| verkaeufer | hersteller | typ_nummer | bezeichnung_jahr | qtj_2016_08 | qtj_2016_09 |
|------------+------------+------------+------------------+-------------+-------------|
|            |            |            |                  |             |             |


Um die Tabelle anlegen zu können müssen wir zerst eine Datenbank anlegen. Dies können wir entweder über die Weboberfläche phpMyAdmin machen oder aber über die Kommandozeile mit dem Befehl mysql -u root -pfbs. 

Der Befehl dazu lautet:
#+BEGIN_SRC SQL
create database fbs;
#+END_SRC

Dann müssen wir die Datenbank zur Benutzung auswählen. Dies geschieht mit:
#+BEGIN_SRC SQL
use fbs;
#+END_SRC

und das Anlegen der Tabelle dann mit dem Befehl:
#+BEGIN_SRC SQL
CREATE TABLE verkauf (
verkaeufer char(40) NOT NULL,
hersteller char(40) NOT NULL,
typ_nummer char(40) NOT NULL,
bezeichnung_jahr char(40) NOT NULL,
qtj_2016_08 int(11) NOT NULL,
qtj_2016_09 int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
#+END_SRC
geht auch utf statt latin1?

Nachdem wir die Tabelle angelegt haben, tragen wir  die Werte von der Tabelle oben ein:

| Verkäufer     | Zeitraum       | Hersteller | Typ         | Bezeichnung und Jahr | Anzahl |
|---------------+----------------+------------+-------------+----------------------+--------|
| Müller, Erwin | August 2016    | HP         | Workstation | Z840 2016            |      7 |
| Müller, Erwin | August 2016    | DELL       | Workstation | Precision 7910 2015  |      8 |
| Müller, Erwin | September 2016 | DELL       | Workstation | Precision 7910 2015  |      1 |
| Müller, Erwin | September 2016 | HP         | Server      | Z840 2016            |      4 |
| Baier, Klaus  | August 2016    | HP         | Server      | Apollo 6500    2016  |      1 |
| Baier, Klaus  | August 2016    | DELL       | Workstation | Precison 7910  2016  |      1 |
| Baier, Klaus  | September 2016 | IBM        | Server      | Power E880     2016  |      6 |
| Baier, Klaus  | September 2016 | HP         | Server      | Apollo 6500          |      2 |

Die Tabelle müssen wir zur Verwendung in einer Datenbank etwas umformatieren:

| verkaeufer    | hersteller | typx        | bezeichnung_jahr | qtj_2016_08 | qtj_2016_09 |
|---------------+------------+-------------+------------------+-------------+-------------|
| Müller, Erwin | HP         | Workstation | Z840 2016        |           7 |           4 |
| Müller, Erwin | DELL       | Workstation | Precison 7910    |           8 |           1 |
| Baier, Klaus  | HP         | Server      | Apollo 6500      |           1 |           2 |
| Baier, Klaus  | DELL       | Workstation | Precision 7910   |           1 |           1 |
| Baier, Klaus  | IBM        | Server      | Power E880       |           0 |           6 |
|                                                                                         |

** Aufgabe:  
Bitte fülle die Tabelle vollständig aus.
 
Um die Tabelle anlegen zu können müssen wir zerst eine Datenbank anlegen. Dies können wir entweder über die Weboberfläche phpMyAdmin machen oder aber über die Kommandozeile mit dem Befehl mysql -u root -pfbs. 

Der Befehl dazu lautet:
#+BEGIN_SRC SQL
create database fbs;
#+END_SRC

Dann müssen wir die Datenbank zur Benutzung auswählen. Dies geschieht mit:
#+BEGIN_SRC SQL
use fbs;
#+END_SRC

und das Anlegen der Tabelle dann mit dem Befehl:
#+BEGIN_SRC SQL
CREATE TABLE verkauf (
verkaeufer char(40) NOT NULL,
hersteller char(40) NOT NULL,
typ_nummer char(40) NOT NULL,
bezeichnung_jahr char(40) NOT NULL,
qtj_2016_08 int(11) NOT NULL,
qtj_2016_09 int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
#+END_SRC
* TODO
geht auch utf statt latin1?

Nachdem wir die Tabelle angelegt haben, tragen wir  die Werte von der Tabelle oben ein:

#+BEGIN_SRC SQL
INSERT INTO sales VALUES ('Müller, Erwin', 'HP', '1A8','Mitsou 2007',7 , 4);
#+END_SRC 

** Aufgabe:
Bitte trage die restlichen Zeilen, aus der Tabelle oben, ebenfalls in die Tabelle ein.

** Probleme der Struktur
In welcher Spalte speichern wir die Werte vom Oktober und November ab?

Die anderen Probleme ergeben sich, wenn wir ein wenig mit der Tabelle herum spielen.

* Max verkauf pro Verkäufer im August
Wir wollen uns den maximalen Verkauf (in Stück) eines Computers pro Verkäufer im August anzeigen lassen.

#+BEGIN_SRC SQL
SELECT verkauf, max(qtj_2006_08)
FROM verkauf
GROUP BY verkaeufer
#+END_SRC

* Durchschnittliche Anzahl der Verkäufe pro Modell
